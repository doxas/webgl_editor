precision mediump float;

uniform mat4 invMatrix;
uniform vec3 lightDirection;
uniform sampler2D texture;
uniform sampler2D shadeTexture;
uniform bool outline;
varying vec3 vNormal;
varying vec4 vColor;
varying vec2 vTexCoord;

void main(){
	if(outline){
		gl_FragColor = vec4(vec3(0.0), 1.0);
	}else{
		vec3 inverseLight = normalize(invMatrix * vec4(lightDirection, 1.0)).xyz;
		float diff = clamp(dot(inverseLight, vNormal), 0.0, 1.0);
		vec3 texColor = (texture2D(texture, vTexCoord)).rgb;
		vec3 shadeColor = (texture2D(shadeTexture, vec2(diff, 0.0))).rgb;
		gl_FragColor = vec4(vColor.rgb * texColor * shadeColor, vColor.a);
	}
}
