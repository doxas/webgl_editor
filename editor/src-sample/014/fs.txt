precision mediump float;

uniform mat4 invMatrix;
uniform vec3 lightPosition;
uniform vec3 ambientColor;
uniform vec3 eyePosition;
uniform vec3 centerPoint;
uniform sampler2D textureUnit;
varying vec3 vPosition;
varying vec3 vNormal;
varying vec4 vColor;
varying vec2 vTexCoord;

void main(){
	vec3 texColor = (texture2D(textureUnit, vTexCoord)).xyz;
	vec3 lightDirection = lightPosition - vPosition;
	vec3 inverseLight = normalize(invMatrix * vec4(lightDirection, 1.0)).xyz;
	vec3 eyeDirection = eyePosition - centerPoint;
	vec3 inverseEye   = normalize(invMatrix * vec4(eyeDirection, 1.0)).xyz;
	vec3 halfLightEye = normalize(inverseLight + inverseEye);
	float diff =     clamp(dot(inverseLight, vNormal), 0.1, 1.0);
	float spec = pow(clamp(dot(halfLightEye, vNormal), 0.0, 1.0), 20.0);
	gl_FragColor = vec4(vColor.rgb * texColor * diff + spec + ambientColor, vColor.a);
}